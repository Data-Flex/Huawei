#include <stdio.h>

void getdata (FILE **input, FILE **output, int *size, char **buf);

int getsize (char* fileinput);

int process_buffer (char* buf, int size);

struct tree {

    char* data;
    tree* left;
    tree* right;
};

int main() {

    FILE *input = NULL;
    FILE *output = NULL;

    int size = 0;
    char *buf = NULL;

    getdata (&input, &output, &size, &buf);
    
    return 0;
}



void getdata (FILE **input, FILE **output, int *size, char **buf) {

    char fileinput [namelen] = "";
    char fileoutput [namelen] = "";

    fgets (fileinput, sizeof(fileinput), stdin);//origin.txt
    fileinput[strlen(fileinput) - 1] = '\0';
    *input = fopen (fileinput, "rb");

    fgets (fileoutput, sizeof(fileoutput), stdin);//asmres.txt
    fileoutput[strlen(fileoutput) - 1] = '\0';
    *output = fopen (fileoutput, "wb");

    *size = getsize (fileinput);

    *buf = (char *) calloc ((*size + 1), sizeof (char));
    fread (*buf, sizeof (char), *size, *input);
}



int getsize (char* fileinput) {

    struct stat st = {0};

    stat (fileinput, &st);

    return st.st_size;
}



int process_buffer (char* buf, int size) {

    int num_of_strings = 0;

    for (int i = 0; i < size; i++) {

        if (*(buf + i) == '\n') {

            *(buf + i) =  '\0';

            num_of_strings ++;
        }
    }

    num_of_strings ++;

    *(buf + size + 1) = '\0';

    return num_of_strings;
}